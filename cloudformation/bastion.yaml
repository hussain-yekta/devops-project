AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for creating a s host
Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  Ami:
    Description: AMI for the instance
    Type: String
  VpcID:
    Type: String
    Description: Bastion host will launch into this VPC
  SubnetID:
    Type: String
    Description: Bastion host will launch into this subnet
Resources:
  ElasticIPaddress:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  BastionHost:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref Ami
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref SubnetID
          GroupSet:
            - !Ref BastionSecurityGroup
  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allows SSH access from VPN (if you have it)
      VpcId: !Ref VpcID
  EIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt
        - ElasticIPaddress
        - AllocationId
      InstanceId: !Ref BastionHost
  SecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref BastionSecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0
  SecurityGroupEgress:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref BastionSecurityGroup
      IpProtocol: '-1'
      CidrIp: 0.0.0.0/0
Outputs:
  ElasticIP:
    Value: !Ref ElasticIPaddress
    Description: Public IP address (connect via SSH on VPN network)
  BastionSecurityGroup:
    Value: !Ref BastionSecurityGroup
    Description: "The bastion security group"
