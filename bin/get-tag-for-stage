#!/bin/bash
#
# This script return a version version based on a stage
#

set -e
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "${DIR}/bash-lib"

# Transform long options to short ones
for arg in "$@"; do
  shift
  case "$arg" in
    "--help")       set -- "$@" "-h" ;;
    "--stage-file") set -- "$@" "-s" ;;
    *)              set -- "$@" "$arg"
  esac
done

# Parse options
while getopts ":hs:" opt; do
  case ${opt} in
    h ) usage ;;
    s ) stagefile="${OPTARG}";;
    ? ) usage ;;
  esac
done
shift $((OPTIND -1))

#
# The script starts here
#

stage=$(basename $stagefile)
pattern='(production|rc).*'

if [[ $stage =~ ${pattern} ]]
then
    version=$(grep '^version=' $stagefile | cut -d'=' -f2)
elif [[ $stage =~ 'staging' ]]
then
  if grep -q '^version=' $stagefile
  then
    version=$(grep '^version=' $stagefile | cut -d'=' -f2)
  else
    version="git-$(git rev-parse HEAD | cut -c 1-7)"
  fi
else
    version="git-$(git rev-parse HEAD | cut -c 1-7)"
fi

if [[ -z $version ]]
then
    echo "Fatal: version is not set for stage $stagefile, aborting"
    exit 1
fi

echo "${version}"

exit 0
