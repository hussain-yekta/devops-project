---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: jenkins-dev.312.school
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins-svc
          servicePort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 50000
      targetPort: 50000
      name: agent
  selector:
    name: jenkins

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  labels:
    name: jenkins
spec:
  serviceName: jenkins
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: jenkins
  template:
    metadata:
      name: jenkins
      labels:
        name: jenkins
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: jenkins
          image: mshaibek/jenkins-312:latest
          imagePullPolicy: Always
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          # env:
          #   - name: JAVA_OPTS
          #     value: -Djenkins.install.runSetupWizard=false
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
          # livenessProbe:
          #   httpGet:
          #     path: /login
          #     port: 8080
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 5
          #   failureThreshold: 12 # ~2 minutes
          # readinessProbe:
          #   httpGet:
          #     path: /login
          #     port: 8080
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 5
          #   failureThreshold: 12 # ~2 minutes
      securityContext:
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: jenkins-home
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 6Gi
